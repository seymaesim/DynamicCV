@using System.Text.Json;
@using static Core_Proje.ViewComponents.Dashboard.MessageChart;
@model List<Sample>

@{
    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.aylar).ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Select(x => x.toplam).ToList());
   
}



<div class="card z-index-2 h-100">
    <div class="card-header pb-0 pt-3 bg-transparent">
        <h6 class="text-capitalize">Mesaj Grafiği</h6>
        <p class="text-sm mb-0">
            <i class="fa fa-arrow-up text-success"></i>
            <span class="font-weight-bold">Toplam Gelen Mesaj</span> in 2023
        </p>
    </div>
    <div class="card-body p-3">
        <div class="chart">
            <canvas id="chart-line" class="chart-canvas" height="300"></canvas>
        </div>
    </div>
</div>



<script src="~/argon-dashboard-master/assets/js/core/popper.min.js"></script>
<script src="~/argon-dashboard-master/assets/js/core/bootstrap.min.js"></script>
<script src="~/argon-dashboard-master/assets/js/plugins/perfect-scrollbar.min.js"></script>
<script src="~/argon-dashboard-master/assets/js/plugins/smooth-scrollbar.min.js"></script>
<script src="~/argon-dashboard-master/assets/js/plugins/chartjs.min.js"></script>

<script>
    var win = navigator.platform.indexOf('Win') > -1;
    if (win && document.querySelector('#sidenav-scrollbar')) {
        var options = {
            damping: '0.5'
        }
        Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
    }
</script>
<!-- Github buttons -->
<script async defer src="https://buttons.github.io/buttons.js"></script>
<!-- Control Center for Soft Dashboard: parallax effects, scripts for the example pages etc -->
<script src="~/argon-dashboard-master/assets/js/argon-dashboard.min.js?v=2.0.4"></script>

<script>

    var ctx1 = document.getElementById("chart-line").getContext("2d");

    var gradientStroke1 = ctx1.createLinearGradient(0, 100, 0, 50);

    gradientStroke1.addColorStop(1, 'rgba(94, 114, 228, 0.2)');
    gradientStroke1.addColorStop(0.2, 'rgba(94, 114, 228, 0.0)');
    gradientStroke1.addColorStop(0, 'rgba(94, 114, 228, 0)');
    new Chart(ctx1, {
        type: "line",
        data: {
            labels: @Html.Raw(XLabels),
            datasets: [{
                label: "Gelen Mesaj Toplamı",
                tension: 0.4,
                borderWidth: 0,
                pointRadius: 0,
                borderColor: "#5e72e4",
                backgroundColor: gradientStroke1,
                borderWidth: 3,
                fill: true,
                //data: [10, 20, 45, 50, 40, 300, 220, 500, 250, 400, 230, 500],
                data: @Html.Raw(YValues),
                maxBarThickness: 6

            }],
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: false,
                }
            },
            interaction: {
                intersect: false,
                mode: 'index',
            },
            scales: {
                y: {
                    grid: {
                        drawBorder: false,
                        display: true,
                        drawOnChartArea: true,
                        drawTicks: false,
                        borderDash: [5, 5]
                    },
                    ticks: {
                        display: true,
                        padding: 10,
                        color: '#fbfbfb',
                        font: {
                            size: 11,
                            family: "Open Sans",
                            style: 'normal',
                            lineHeight: 2
                        },
                    }
                },
                x: {
                    grid: {
                        drawBorder: false,
                        display: false,
                        drawOnChartArea: false,
                        drawTicks: false,
                        borderDash: [5, 5]
                    },
                    ticks: {
                        display: true,
                        color: '#ccc',
                        padding: 20,
                        font: {
                            size: 11,
                            family: "Open Sans",
                            style: 'normal',
                            lineHeight: 2
                        },
                    }
                },
            },
        },
    });
</script>